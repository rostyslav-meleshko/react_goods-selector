{"version":3,"sources":["App.js","index.js"],"names":["goodsFromServer","goods","map","good","name","isSelected","App","state","selectedGoods","whichGoodsSelected","toSelect","filter","el","length","pop","join","handleClick","setState","removeSelection","this","className","type","onClick","key","React","Component","ReactDOM","render","document","getElementById"],"mappings":"sOAKMA,G,MAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WAGIC,EAAQD,EAAgBE,KAAI,SAAAC,GAAI,MAAK,CACzCC,KAAMD,EAAME,YAAY,MAsFXC,E,4MAlFbC,MAAQ,CACNC,cAAc,YAAKP,I,EAGvBQ,mBAAqB,WAAO,IAEpBC,EADoB,EAAKH,MAAvBC,cACuBG,QAAO,SAAAC,GAAE,OAAIA,EAAGP,cAAYH,KAAI,SAAAU,GAAE,OAAIA,EAAGR,QAChES,EAAWH,EAAXG,OAER,OAAQA,GACN,KAAK,EAAG,MAAO,oBACf,KAAK,EAAG,MAAM,GAAN,OAAUH,EAAS,GAAnB,gBACR,QAIE,OAHAA,EAASG,EAAS,GAAlB,UAA0BH,EAASG,EAAS,GAA5C,gBAAsDH,EAASG,EAAS,IACxEH,EAASI,MAEH,GAAN,OAAUJ,EAASK,KAAK,MAAxB,mB,EAINC,YAAc,SAACb,GAAU,IACfK,EAAkB,EAAKD,MAAvBC,cAER,EAAKS,UAAS,kBAAMT,EAAcN,KAAI,SAACU,GAKrC,OAJIA,EAAGR,OAASD,IACdS,EAAGP,YAAcO,EAAGP,YAGfO,S,EAIXM,gBAAkB,WAAO,IACfV,EAAkB,EAAKD,MAAvBC,cAER,EAAKS,UAAS,kBAAMT,EAAcN,KAAI,SAACU,GAGrC,OAFAA,EAAGP,YAAa,EAETO,S,uDAID,IAAD,OACCJ,EAAkBW,KAAKZ,MAAvBC,cAER,OACE,yBAAKY,UAAU,OACb,4BACGD,KAAKV,qBACN,4BACEY,KAAK,SACLC,QAAS,WACP,EAAKJ,oBAHT,MASDlB,EAAgBa,OACjB,4BACGL,EAAcN,KAAI,SAAAC,GAAI,OACrB,wBACEoB,IAAKpB,EAAKC,KACVgB,UAAWjB,EAAKE,WAAa,WAAa,MAEzCF,EAAKC,KACN,4BACEiB,KAAK,SACLC,QAAS,WACP,EAAKN,YAAYb,EAAKC,QAGvBD,EAAKE,WAAa,SAAW,iB,GAzE1BmB,IAAMC,WClBxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.3b8336c8.chunk.js","sourcesContent":["/* eslint-disable max-len */\n/* eslint-disable no-param-reassign */\nimport React from 'react';\nimport './App.scss';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst goods = goodsFromServer.map(good => ({\n  name: good, isSelected: false,\n}));\n\nclass App extends React.Component {\n  state = {\n    selectedGoods: [...goods],\n  }\n\nwhichGoodsSelected = () => {\n  const { selectedGoods } = this.state;\n  const toSelect = selectedGoods.filter(el => el.isSelected).map(el => el.name);\n  const { length } = toSelect;\n\n  switch (length) {\n    case 0: return 'No goods selected';\n    case 1: return `${toSelect[0]} is selected`;\n    default:\n      toSelect[length - 2] = `${toSelect[length - 2]} and ${toSelect[length - 1]}`;\n      toSelect.pop();\n\n      return `${toSelect.join(', ')} are selected`;\n  }\n}\n\nhandleClick = (good) => {\n  const { selectedGoods } = this.state;\n\n  this.setState(() => selectedGoods.map((el) => {\n    if (el.name === good) {\n      el.isSelected = !el.isSelected;\n    }\n\n    return el;\n  }));\n}\n\nremoveSelection = () => {\n  const { selectedGoods } = this.state;\n\n  this.setState(() => selectedGoods.map((el) => {\n    el.isSelected = false;\n\n    return el;\n  }));\n}\n\nrender() {\n  const { selectedGoods } = this.state;\n\n  return (\n    <div className=\"App\">\n      <h1>\n        {this.whichGoodsSelected()}\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.removeSelection();\n          }}\n        >\n          X\n        </button>\n      </h1>\n      {goodsFromServer.length}\n      <ul>\n        {selectedGoods.map(good => (\n          <li\n            key={good.name}\n            className={good.isSelected ? 'selected' : null}\n          >\n            {good.name}\n            <button\n              type=\"button\"\n              onClick={() => {\n                this.handleClick(good.name);\n              }}\n            >\n              {good.isSelected ? 'Remove' : 'Add'}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}